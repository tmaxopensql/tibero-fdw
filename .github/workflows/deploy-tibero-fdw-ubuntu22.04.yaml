name: deploy-tibero-fdw-ubuntu22

on:
  workflow_dispatch:
#  release:
#    types: [published]

env:
  BUILD_OS: ubuntu22
  ASSET_NAME: tibero-fdw-dist-ubuntu22
  BUILD_PATH: /home/tibero-fdw-dist-ubuntu22
  ZIP_FILE_PATH: /home/tibero-fdw-dist-ubuntu22.zip

jobs:
  deploy-tibero-fdw-ubuntu22:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Get the latest release info
      id: latest_release_info
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.ADMIN_ACCESS_TOKEN }}
  
    - name: Install PostgreSQL
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update -y
        sudo apt-get install -y postgresql-14 postgresql-contrib-14 postgresql-server-dev-14

    - name: Build tibero-fdw 
      run: |
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GITHUB_WORKSPACE/lib
        cd $GITHUB_WORKSPACE
        make USE_PGXS=1
 
    - name: Make dist zip file
      run: |
        sudo mkdir ${{ env.BUILD_PATH }}
        sudo mkdir ${{ env.BUILD_PATH }}/lib
        sudo cp $GITHUB_WORKSPACE/tibero_fdw.so ${{ env.BUILD_PATH }}
        sudo cp $GITHUB_WORKSPACE/*.bc ${{ env.BUILD_PATH }}
        sudo cp $GITHUB_WORKSPACE/tibero_fdw.control ${{ env.BUILD_PATH }}
        sudo cp $GITHUB_WORKSPACE/*.sql ${{ env.BUILD_PATH }}
        sudo cp $GITHUB_WORKSPACE/Makefile ${{ env.BUILD_PATH }}
        sudo cp $GITHUB_WORKSPACE/setenv.sh ${{ env.BUILD_PATH }}
        sudo cp -r $GITHUB_WORKSPACE/tests/ ${{ env.BUILD_PATH }}
        sudo cp -r $GITHUB_WORKSPACE/lib/ ${{ env.BUILD_PATH }}
        sudo cd ${{ env.BUILD_PATH }}
        sudo apt-get install -y zip
        sudo cd ${{ env.BUILD_PATH }} && sudo zip -r ${{ env.ZIP_FILE_PATH }} .

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ADMIN_ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
        asset_path: ${{ env.ZIP_FILE_PATH }}
        asset_name: ${{ env.ASSET_NAME }}.zip
        asset_content_type: application/zip
